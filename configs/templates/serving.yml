apiVersion: v1
kind: Service
metadata:
  name: serving-{model} 
spec:
  selector:
    app: serving-{model}
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: myclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1 
kind: Deployment 
metadata:
  name: serving-{model}
spec:
  replicas: 1 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: serving-{model} 
  template:
    metadata:
      labels:
        app: serving-{model} 
    spec:
      containers:
      - name: serving-{model} 
        image: eu.gcr.io/gothic-module-289816/serving:latest 
        imagePullPolicy: IfNotPresent 
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /
            port: 5000 
          initialDelaySeconds: 5
          periodSeconds: 60 
        volumeMounts:
          - name: myclaim 
            mountPath: /usr/app/files
        env:
        - name: TOTAL_NUM_INDEXES 
          value: "{num_indexes}"
        - name: ML_MODEL 
          value: "{model}"
      volumes:
        - name: myclaim 
          persistentVolumeClaim:
            claimName: myclaim 